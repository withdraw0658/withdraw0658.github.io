{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Info","재고","Detail","useState","alert","alert변경","inputData","inputData변경","useEffect","타이머","setTimeout","console","log","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","className","onChange","e","target","value","src","width","onClick","재고변경","push","Card","i","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Carousel","alt","Caption","Button","variant","map","a","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b2d5f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default  [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n] ","import React, {useState, useEffect} from 'react';\r\n// Detail 페이지에 뒤로가기 버튼 만들기\r\n// 1. useHistory 라는 훅 import 2. useHistory()훅 사용\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n//yarn add styled components 후 import\r\nimport styled from 'styled-components'\r\n//yarn add node-sass (CSS를 프로그래밍언어스럽게 작성가능한 preprocessor)\r\n//import './Detail.scss';\r\n\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.색상 }\r\n`;\r\n\r\n\r\n\r\n\r\nfunction Detail(props){\r\n    \r\n    let [alert,alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n\r\n    // 컴포넌트가 mount, update 될 때 특정 코드를 실행할 수 있음\r\n    useEffect(() => {\r\n      // axios.get()\r\n\r\n\r\n      // 2초 후에 저거 alert 창을 안보이게 해주셈\r\n      let 타이머 = setTimeout(()=>{ alert변경(false) }, 2000);\r\n      console.log('안녕')\r\n      // 컴포넌트가 사라질 때 코드를 실행시킬 수도 있음 return\r\n      // setTimeout은 페이지가 실행되는 도중에 뒤로가기, 화면이동이 일어나면 버그가 발생할수있음\r\n      // 그래서 return clearTimeout으로 해제해야함\r\n      return ()=>{ clearTimeout(타이머) }\r\n    },[]);\r\n\r\n    \r\n\r\n    // 라우터의 useParams 훅\r\n    let {id} = useParams();\r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n        return 상품.id == id\r\n    })\r\n    let history = useHistory();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <박스>\r\n            <제목 className=\"red\">Detail</제목>\r\n            {/* <제목 색상=\"blue\">Detail</제목> */}\r\n        </박스>\r\n        { inputData }\r\n        <input onChange={(e)=>{ inputData변경(e.target.value) }}/>\r\n\r\n        {\r\n          alert == true \r\n          ? (<div className=\"my-alert\">\r\n              <p>재고가 얼마 남지 않았습니다</p>\r\n            </div>)\r\n          : null\r\n        }\r\n\r\n        \r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={'https://codingapple1.github.io/shop/shoes'+ id +'.jpg'} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n            <p>{찾은상품.content}</p>\r\n            <p>{찾은상품.price}원</p>\r\n\r\n            <Info 재고={props.재고}></Info>\r\n\r\n            <button className=\"btn btn-danger\" onClick={()=>{ props.재고변경([9,11,12]) }}>주문하기</button> \r\n            <button className=\"btn btn-danger\" onClick={()=>{ \r\n                history.push('/')\r\n                // history.goBack();\r\n            }}>뒤로가기</button> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function Info(props){\r\n    return (\r\n      <p>재고 : {props.재고[0]}</p>\r\n    )\r\n  }\r\n\r\n  export default Detail;","/* eslint-disable */  //터미널에 waring 제거\n\nimport logo from './logo.svg';\nimport React, {useState} from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Carousel, Button } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js';\n\n// Route를 만들어보자 3. import 하자\nimport { Link, Route, Switch } from 'react-router-dom'\n\n// yarn add axios\nimport axios from 'axios';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  // 중요한 데이터는 상위 컴포넌트인 App.js에서 명시\n  let [재고,재고변경] = useState([10,11,12]);\n  \n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\"> Detail </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n\n        {/* exact라는 속성 추가하면 경로가 정확히 일치할 떄만 보여줌 */}\n        <Route exact path=\"/\"> \n          <Carousel className=\"background\">\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"/background.jpg\"\n                alt=\"First slide\"\n              />\n              <Carousel.Caption>\n                <h3>20% Season Off</h3>\n                <Button variant=\"primary\">Learn more</Button>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n\n          <div className=\"container\">\n            <div className=\"row\">\n\n              {\n                shoes.map((a,i) => {\n                  // 반복시킨 HTML에는 key={} 꼭 작성해야함\n                  return <Card shoes={shoes[i]} i={i} key={i}/>\n                })\n              }\n            </div>\n            <button className=\"btn btn-primary\" onClick={()=>{\n              //서버에 데이터를 보내고 싶을때 POST 요청하는법\n              //고급자용 요청시의 header, 쿠키 설정도 가능 이 라이브러리 찾아서 해보셈 \n              //axios.post('서버URL', { id : 'codingapple', pw : 1234 });\n\n              //로딩중이라는 UI 띄움\n\n              // 1.썡자바스크립트 fetch로  단점 : 호환성이 안좋음, json을 그대로 보내줌 (object로 바꿔주는 작업이 필요함)\n              //fetch('https://codingapple1.github.io/shop/data2.json').then()\n              // 2. axios JSON을 Object로 바꿔줌 이거쓰셈!\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{ \n                //로딩중이라는 UI 안보이게처리\n\n\n                console.log(result.data);\n                // ...대괄호 벗기는거임 \n                // shoes= [{},{},{}], ...result.data=[{},{},{}]\n                shoes변경([...shoes, ...result.data]); \n\n                //더보기를 2번째 누르면 새로운 URL로 데이터 요청을 하고싶다면?\n                //변수나 state로 누를횟수를 저장하고  url 바꿔주면됨\n\n\n              })\n              .catch(()=>{ \n                //로딩중이라는 UI 안보이게처리\n                console.log('실패했어요');\n              })\n\n            }}>더보기</button>\n          </div>\n        </Route>\n\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나적었을때 이거 보여주셈</div>\n        </Route>\n\n        {/* <Route path=\"/detail\" component={Modal}></Route> // Route로 component 쓰는방법*/}\n        \n      </Switch>\n\n    </div>\n  );\n}\n\n\n\nfunction Card(props){\n  return(\n    <div className=\"col-md-4\">\n      {/* src에 데이터바인딩방법 */}\n      <img src= {'https://codingapple1.github.io/shop/shoes'+ (props.i + 1) +'.jpg'} width=\"100%\"/>\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Route를 만들어보자 페이지를 나누기 위해\n// 1. index.js에 import  2. App을 BrowserRouter로 감싸고\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}